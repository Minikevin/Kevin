package target

import java.io.File;
import java.io.IOException;
import java.sql.Date;
import java.text.SimpleDateFormat;

public class FilesDemo {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		//创建一个file对象，可以是文件也可以是目录
		File file=new File("d:/test.txt");
		//判断对象是否存在
		System.out.println(file.exists());
		//createNewFile()只能创建文件
		file.createNewFile();
		System.out.println(file.length());//文件的长度
		System.out.println(file.canRead());//是否可读
		System.out.println(file.canWrite());//是否可写
	//	System.out.println(file.lastModified());//最后一次修改的时间
		Date modifydate=new Date(file.lastModified());//获取文件的修改时间
		System.out.println(modifydate);
		SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd hh:mm");
		System.out.println(dateFormat.format(modifydate));
	//demo/kyy.txt
		//先创建目录（文件夹）
		File demodir=new File("demo");
		demodir.mkdir();
		//再创建文件
		File kyyfile=new File("demo/kyy.txt");
		kyyfile.createNewFile();
		
		System.out.println(kyyfile.getName());
		System.out.println(kyyfile.getParent());
		System.out.println(kyyfile.getPath());
		System.out.println(kyyfile.getAbsoluteFile());
		kyyfile.isFile();
		File dir1dir=new File("demo/dir1");
		dir1dir.mkdir();
		File dir2dir= new File("demo","dir2");
		dir2dir.mkdir();
		//通过文件的相对路径创建文件
		File file1file=new File("demo/dir1/file1.txt");//一个字符串的形式
		file1file.createNewFile();
		//通过父母路径及文件名创建文件
		File file2file=new File("demo/dir1","file2.txt");//两个字符串的形式
		file2file.createNewFile();
		//通过父母文件对象及文件名创建文件
		File file3file=new File(dir2dir,"file3.txt");//一个文件对象，一个字符串
		file3file.createNewFile();
		//kyyfile.delete();//删除文件
		//file3file.delete();
		//dir2dir.delete();//删除一个目录，只能删除空目录
		String src="C:/Users/Administrator/workspace/JavaStu";
		//listAllFileAndDir(src);
		src="C:/Users/Administrator/workspace/JavaStu/demo";
		deletDir(src);
	}
	//删除目录下的所有文件及子目录
private static void deletDir(String src) {
	File filedir=new File(src);
	if(!filedir.exists())System.out.println("不存在此目录或文件");
	else{
		File[] fds=filedir.listFiles();
		for (File file : fds) {
			if(file.isFile()){
				System.out.println("文件："+file.getAbsolutePath()+"删除成功");
				file.delete();
			}
			if(file.isDirectory())
			{
				deletDir(file.getAbsolutePath());
				file.delete();
				System.out.println("目录："+file.getAbsolutePath()+"删除成功");
			
			}
		}
		filedir.delete();
	}
		
	}
//遍历出一个目录下的所有子目录及文件，递归
	private static void listAllFileAndDir(String src) {
		// TODO Auto-generated method stub
		File filedir=new File(src);
		if(!filedir.exists())System.out.println("不存在此目录或文件");
		else{
			/*String[] fds=filedir.list();
			for (String string : fds) {
				System.out.println(string);
			}*/
			File[] fds=filedir.listFiles();
			for (File file : fds) {
				if(file.isFile())System.out.println("文件："+file.getAbsolutePath());
				if(file.isDirectory())
				{System.out.println("目录："+file.getAbsolutePath());
				listAllFileAndDir(file.getAbsolutePath());
				}
			}
		}
	}

}