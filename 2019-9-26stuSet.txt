package com.gdgm.kyy;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

class Student {
  private int stuId;
  private String stuName;
  public Student(int stuId, String stuName) {
	this.stuId = stuId;
	this.stuName = stuName;
  }
public int getStuId() {
	return stuId;
}
public void setStuId(int stuId) {
	this.stuId = stuId;
}
public String getStuName() {
	return stuName;
}
public void setStuName(String stuName) {
	this.stuName = stuName;
}
@Override
public String toString() {
	return "学号=" + stuId + " 姓名=" + stuName ;
}
@Override
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + stuId;
	//result = prime * result + ((stuName == null) ? 0 : stuName.hashCode());
	return result;
}
@Override
public boolean equals(Object obj) {
	if (this == obj)//当前对象this与所比对象obj的地址相同，直接返回true
		return true;
	if (obj == null)//所比对象obj为null，直接返回false
		return false;
	if (getClass() != obj.getClass())//当前对象this与所比对象obj的类型不一样，直接返回false
		return false;
	Student other = (Student) obj;//将所比对象obj向下转向为Student对象
	if (stuId != other.stuId)
		return false;
	/*if (stuName == null) {
		if (other.stuName != null)
			return false;
	} else if (!stuName.equals(other.stuName))
		return false;*/
	return true;
}
  
}
public class StudentSet {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Set<Student> stSet=new HashSet<Student>();
		Student stu1=new Student(1, "Kyy");
		stSet.add(stu1);
		stSet.add(new Student(2, "Tom"));
		stSet.add(new Student(3, "Betty"));
		stSet.add(new Student(4, "Rose"));
		stSet.add(new Student(5, "Jack"));
		stSet.add(new Student(6, "Merry"));
		stSet.add(stu1);
		stSet.add(new Student(3, "Walle"));
		//当学生元素是否相等只依据学号时，必须修改hashCode()和equals()两个方法
		System.out.println(stSet);
		
		Iterator<Student> iterator=stSet.iterator();
		while (iterator.hasNext()) {
			Student student = (Student) iterator.next();
			System.out.println(student);
		}
		
		stSet.remove(new Student(1, "Kyy"));
		System.out.println(stSet);
	}

}
